digraph G {
    fontname = "Bitstream Vera Sans"
    fontsize = 8

    node [
        fontname = "Bitstream Vera Sans"
        fontsize = 8
        shape = "record"
    ]

    edge [
        fontname = "Bitstream Vera Sans"
        fontsize = 8
        labeldistance = 1.5
    ]

    MainThread [
        label = "{MainThread|- server : WebSocketServer\l- highscoreManagerThread : HighscoreManagerThread\l}"
    ]

    WorkerThread [
        label = "{WorkerThread|- connection: Serialization\l- state : ClientState\l- highscore : Highscore\l|+ WorkerThread(highscore : Highscore, socket : WebSocket)\l+ run() : Highscore\l}"
    ]

    ClientState [
        label = "{\<\<enumeration\>\>\nClientState|+ CONNECTED\l+ SCORE_RECEIVED\l+ HIGHSCORE_SENT\l}"
    ]

    WebSocketServer [
        label = "{WebSocketServer||+ getConnection(): WebSocket\l}"
    ]

    WebSocket [
        label = "{WebSocket|- eventHandler : std::optional\<std::function\<void(EventType, std::optional\<std::string\>)\>\>|+ connect(uint16_t port)\l+ registerHandler(handler: std::function\<void(EventType, std::optional\<std::string\>)\>)\l+ send(std::string msg)\l}"
    ]

    EventType [
        label = "{\<\<enumeration\>\>\nEventType|+ CONNECTED\l+ RECEIVED\l+ DISCONNECTED\l}"
    ]

    Serialization [
        label = "{Serialization|- socket : WebSocket\l- lock: std::mutex\l|- eventHandler(type : EventType, std::optional\<std::string\> msg)\l+ receiveHighscore() : int\l+ isConnected() : bool\l+ sendHighscore(highscore : Highscore)\l}" 
    ]

    LibWebSockets [
        label = "{\<\<external\>\>\nlibwebsockets}"
    ]

    json [
        label = "{\<\<external\>\>\nnlohmann::json}"
    ]

    Highscore [
        label = "{Highscore|- scoreList : std::deque\<std::tuple\<std::string, int\>\>|+ toJson : nlohmann::json\l+ insert(std::string name, int score) : int\l}"
    ]

    HighscoreManagerThread [
        label = "{HighscoreManagerThread|- file : std::fstream\l- highscore : currentHighscore\l- lock : std::mutex\l|+ mergeAndSaveUpdatedHighscore(newHighscore : Highscore)\l+ getCurrentHighscore() : Highscore\l}"
    ]
    
    WorkerThread -> MainThread [
        arrowhead = "diamond"

        taillabel = "0..*"
        headlabel = "1"
    ]
    WebSocketServer -> MainThread [
        arrowhead = "diamond"

        taillabel = "1"
        headlabel = "1"
    ]
    ClientState -> WorkerThread [
        arrowhead = "diamond"

        taillabel = "1"
        headlabel = "1"
    ]
    WebSocket -> Serialization [
        arrowhead = "diamond"

        taillabel = "1"
        headlabel = "1"
    ]
    EventType -> WebSocket[
        arrowhead = "diamond"

        taillabel = "1"
        headlabel = "1"
    ]
    Serialization -> WorkerThread [
        arrowhead = "diamond"

        taillabel = "1"
        headlabel = "1"
    ]
    Highscore -> WorkerThread [
        arrowhead = "diamond"

        taillabel = "1"
        headlabel = "1"
    ]
    Highscore -> HighscoreManagerThread [
        arrowhead = "diamond"

        taillabel = "1"
        headlabel = "1"
    ]
    MainThread -> HighscoreManagerThread[
        arrowhead = "diamond"

        taillabel = "1"
        headlabel = "1"
    ]
    WebSocket -> LibWebSockets [
        arrowhead = "onormal"
        style = "dashed"
    ]
    WebSocketServer -> LibWebSockets [
        arrowhead = "onormal"
        style = "dashed"
    ]
    Serialization -> json [
        arrowhead = "onormal"
        style = "dashed"
    ]
    Highscore -> json [
        arrowhead = "onormal"
        style = "dashed"
    ]
}    
